{% extends "layouts/base.njk" %}

{% import "macros.njk" as macro %}
{% from "macros.njk" import adminNavigation with context %}

{% set title = "Supported housing services" %}
{% set caption = thisOrganisation.name %}
{% set isGlobalView = isAdmin and path.startsWith("/schemes") %}

{% block content %}
  {{ govukNotificationBanner({
    text: data.schemes[query.schemeId].name + " has been created and can now be edited by your organisation.",
    type: "success"
  }) if query.success == "created" }}

  {{ govukNotificationBanner({
    text: data.schemes[query.schemeId].name + " has been deleted.",
    type: "success"
  }) if query.success == "deleted" }}

  {% if isGlobalView %}
    {{ macro.heading(title) }}
  {% else %}
    {{ adminNavigation(title) if isAdmin else macro.heading(title, caption) }}
  {% endif %}

  <div class="app-filter-layout" data-module="filter-layout">
    <div class="govuk-button-group app-filter-toggle">
      {{ govukButton({
        href: "/schemes/new",
        text: "Create a new supported housing service"
      }) }}
    </div>

    {{ govukDetails({
      classes: "govuk-!-width-two-thirds",
      summaryText: "What is a supported housing service?",
      text: "A supported housing service provides shared or self-contained housing for a particular client group, for example younger or vulnerable people. A single service can contain multiple units, for example bedrooms in shared houses or a bungalow with 3 bedrooms."
    }) }}

    <div class="app-filter-layout__filter">
      {% call appFilter({
        title: "Filters"
      }) %}
        {% include "schemes/_filters.njk" %}
      {% endcall %}
    </div>

    <div class="app-filter-layout__content">
      {{ appSearch({
        decorate: "q",
        classes: "govuk-!-margin-bottom-4",
        label: {
          classes: "govuk-!-margin-bottom-2",
          text: "Search by service name, code or postcode"
        }
      }) }}

      <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--m">

      {% set schemeRows = [] %}
      {% for scheme in results %}
        {% set schemePath = "/schemes/" + scheme.id %}
        {% set schemeLocationCount = scheme.locations | length %}
        {% set schemeDescription %}
          {% if schemeLocationCount > 1 %}
            {{ schemeLocationCount }} locations
          {% else %}
            {{ scheme.locations.l1.address }}, {{ scheme.locations.l1.postcode }}
          {% endif %}
        {% endset %}
        {% set schemePath = schemePath + "/check-your-answers" if scheme.status == "inProgress" else schemePath %}
        {% set row = schemeRows.push([{
            classes: "govuk-!-text-align-left",
            text: "S" + scheme.id,
            format: "numeric"
          }, {
            html: macro.entityHtml(scheme.name, schemePath, scheme["primary-client-group"] | textFromInputValue(data.questions["client-groups"]) if scheme["primary-client-group"] else false)
          }, {
            html: organisations[scheme.agentId].name
          }, {
            html: govukTag({
              classes: "govuk-tag--" + data.statuses[scheme.status].colour,
              text: data.statuses[scheme.status].text
            })
          }])
        %}
      {% endfor %}

      {% set captionHtml %}
        <span class="govuk-!-margin-right-4">
          {% if q %}<b>56</b> services found of{% endif %}
          <b>{{ pagination.results.count }}</b> total services
        </span>
      {% endset %}

      {% if results.length %}
        {% call appFigure ({
          id: "services",
          caption: {
            html: captionHtml
          }
        }) %}
          {% call appTableGroup({
            labelledby: "services"
          }) %}
            {{ govukTable({
              head: [{
                html: "Group&nbsp;code"
              }, {
                text: "Service"
              }, {
                text: "Managing agent"
              }, {
                text: "Status"
              }],
              rows: schemeRows
            }) }}
          {% endcall %}
          {{ appPagination(pagination) }}
        {% endcall %}
      {% else %}
        <p class="govuk-body">
          <strong>No supported housing services found</strong>
        </p>
      {% endif %}
    </div>
  </div>
{% endblock %}
