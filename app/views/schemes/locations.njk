{% extends "schemes/_scheme-layout.njk" %}

{% set section = "locations" %}

{% block sectionContent %}
  {{ govukButton({
    classes: "govuk-button--secondary",
    text: "Add another location" if locationsCount > 1 else "Add a location",
    href: schemePath + "/location/new"
  }) if not scheme.deactivated }}

  {% set locationRows = [] %}
  {% for location in results %}
    {% set locationPath = "/schemes/" + scheme.id + "/location/" + itemId %}
    {% set row = locationRows.push([{
      classes: "govuk-!-text-align-left",
      text: "S" + scheme.id + "-" + location.postcode | replace(" ", ""),
      format: "numeric"
    }, {
      html: macro.entityHtml(location.postcode, locationPath, location.name) if location.postcode else "Not known"
    }, {
      html: macro.entityHtml(location["type-of-unit"] | textFromInputValue(data.questions["type-of-unit"].supported), false, "With wheelchair adaptations" if location["is-adapted"] == "true")
    }, {
      html: "<a href=\"" + locationPath + "/delete\">Delete<span class=\"govuk-visually-hidden\">" + location.postcode + "</span>" if isAdmin and not scheme.deactivated
    }])
    %}
  {% endfor %}

  {% if locationsCount > 0 %}
    {{ appSearch({
      classes: "govuk-!-margin-bottom-4",
      label: {
        text: "Search by location code or postcode"
      }
    }) }}

    <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--m">

    {% call appTableGroup({ ariaLabel: "locations" }) %}
      {{ govukTable({
        caption: macro.tableCaption("locations", pagination.results.count, q) | safe,
        captionClasses: "govuk-table__caption--m govuk-!-font-size-19 govuk-!-font-weight-regular",
        head: [{
          html: "Code"
        }, {
          text: "Postcode"
        }, {
          text: "Type of unit"
        }, {
          text: "Actions"
        } if isAdmin and not scheme.deactivated],
        rows: locationRows
      }) }}
    {% endcall %}

    {{ appPagination(pagination) }}
  {% endif %}
{% endblock %}
