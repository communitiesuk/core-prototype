{% extends "schemes/_scheme-layout.njk" %}

{% set section = "locations" %}

{% block sectionContent %}
  {{ govukButton({
    classes: "govuk-button--secondary",
    text: "Add another location" if locationsCount > 1 else "Add a location",
    href: schemePath + "/location/new"
  }) if not scheme.deactivated }}

  {% for itemId, location in scheme.locations %}
    {{ xGovukSummaryCard({
      titleText: location.address,
      actions: actionLinks({
        href: schemePath + "/location/" + itemId + "/delete",
        text: "Delete",
        visuallyHiddenText: location.address
      }) if not scheme.deactivated,
      classes: "govuk-!-margin-bottom-6",
      rows: [{
        key: {
          text: "Scheme code"
        },
        value: {
          classes: "app-!-font-tabular",
          text: "S" + scheme.id + "-" + location.postcode | replace(" ", "")
        }
      }, {
        key: {
          text: "Postcode"
        },
        value: {
          text: macro.postcodeHtml(location.postcode, location["local-authority"].name) if location.postcode else "Not known"
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "postcode"
        }) if not scheme.deactivated and isAdmin
      }, {
        key: {
          text: "Type of unit"
        },
        value: {
          text: location["type-of-unit"] | textFromInputValue(data.questions["type-of-unit"].supported)
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "type of unit"
        }) if not scheme.deactivated
      }, {
        key: {
          text: "Type of building"
        },
        value: {
          text: location["type-of-building"] | textFromInputValue(data.questions["type-of-building"])
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "type of building"
        }) if not scheme.deactivated
      }, {
        key: {
          text: "Wheelchair adaptation"
        },
        value: {
          text: location["is-adapted"] | textFromInputValue(data.questions["yes-no"])
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "if location has been built or adapted to wheelchair-user standards"
        }) if not scheme.deactivated
      }]
    }) }}
  {% endfor %}
{% endblock %}
