{% set locationsCount = scheme.locations | length %}

{% set detailsHtml %}
  {% include "schemes/_scheme-answers.njk" %}
{% endset %}

{% set locationsHtml %}
  {% for itemId, location in scheme.locations %}
    <h2 class="govuk-heading-m">{{ location.address }}</h2>
    {{ govukSummaryList({
      classes: "govuk-!-margin-bottom-9" if not loop.last else "",
      rows: [{
        key: {
          text: "Location code"
        },
        value: {
          classes: "app-!-font-tabular",
          text: "S" + scheme.id + "-" + location.postcode | replace(" ", "")
        }
      }, {
        key: {
          text: "Postcode"
        },
        value: {
          text: macro.postcodeHtml(location.postcode, location["local-authority"].name) if location.postcode else "Not known"
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "postcode"
        }) if scheme.draft or isAdmin
      }, {
        key: {
          text: "Type of unit"
        },
        value: {
          text: location["type-of-unit"] | textFromInputValue(data.questions["type-of-unit"].supported)
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "type of unit"
        })
      }, {
        key: {
          text: "Type of building"
        },
        value: {
          text: location["type-of-building"] | textFromInputValue(data.questions["type-of-building"])
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "type of building"
        })
      }, {
        key: {
          text: "Wheelchair adaptation"
        },
        value: {
          text: location["is-adapted"] | textFromInputValue(data.questions["yes-no"])
        },
        actions: actionLinks({
          href: schemePath + "/location/" + itemId,
          visuallyHiddenText: "if location has been built or adapted to wheelchair-user standards"
        })
      }]
    }) }}
  {% endfor %}

  {{ govukButton({
    classes: "govuk-button--secondary",
    text: "Add another location" if locationsCount > 1 else "Add a location",
    href: schemePath + "/location/new"
  }) }}
{% endset %}

{{ govukTabs({
  items: [
    {
      label: "Service",
      id: "details",
      panel: {
        html: detailsHtml
      }
    }, {
      label: locationsCount + " locations" if locationsCount > 1 else "Location",
      id: "locations",
      panel: {
        html: locationsHtml
      }
    }
  ]
}) }}
