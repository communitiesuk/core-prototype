{% set hasPostcode = log[section.id]["postcode-known"] == "true" %}
{% set isRenewal = log["setup"]["letting-renewal"] == "true" %}
{% set logSubmitted = log.status == "submitted" %}

{{ govukSummaryList({
  rows: [{
    key: {
      text: "Length of time in local authority area"
    },
    value: {
      text: log[section.id]["time-lived-in-area"] | textFromInputValue(data.questions["length-of-time"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["time-lived-in-area"] else "Answer",
        href: sectionPath + "/time-lived-in-area",
        visuallyHiddenText: "length of time in local authority area"
      }] if not logSubmitted
    }
  }, {
    key: {
      text: "Length of time on local authority waiting list"
    },
    value: {
      text: log[section.id]["time-on-waiting-list"] | textFromInputValue(data.questions["length-of-time"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["time-on-waiting-list"] else "Answer",
        href: sectionPath + "/time-on-waiting-list",
        visuallyHiddenText: "length of time on local authority waiting list"
      }] if not logSubmitted
    }
  } if not isRenewal, {
    key: {
      text: "Reason for leaving last settled home"
    },
    value: {
      text: log[section.id]["reason-for-leaving-last-settled-home"] | textFromInputValue(data.questions["reason-for-leaving-last-settled-home"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["reason-for-leaving-last-settled-home"] else "Answer",
        href: sectionPath + "/reason-for-leaving-last-settled-home",
        visuallyHiddenText: "reason for leaving last settled home"
      }] if not logSubmitted
    }
  }, {
    key: {
      text: "Where was the household immediately before this letting?"
    },
    value: {
      text: log[section.id]["previous-accommodation"] | textFromInputValue
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["previous-accommodation"] else "Answer",
        href: sectionPath + "/previous-accommodation",
        visuallyHiddenText: "where the household was immediately before this letting"
      }] if not logSubmitted
    }
  } if log[section.id]["previous-accommodation"], {
    key: {
      text: "Postcode of last settled home"
    },
    value: {
      text: macro.postcodeHtml(log[section.id]["postcode"], "Arun") if hasPostcode else "Not known"
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["postcode"] else "Answer",
        href: sectionPath + "/postcode",
        visuallyHiddenText: "postcode of last settled home"
      }] if not logSubmitted
    }
  }, {
    key: {
      text: "Location of last settled home"
    },
    value: {
      text: log[section.id]["local-authority"] | textFromInputValue(data.questions["local-authorities"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["local-authority"] else "Answer",
        href: sectionPath + "/local-authority",
        visuallyHiddenText: "location of last settled home"
      }] if not logSubmitted
    }
  } if not hasPostcode and not isRenewal, {
    key: {
      text: "Removal of spare room subsidy or benefit cap"
    },
    value: {
      text: log[section.id]["spare-room-subsidy"] | textFromInputValue(data.questions["spare-room-subsidy"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["spare-room-subsidy"] else "Answer",
        href: sectionPath + "/spare-room-subsidy",
        visuallyHiddenText: "removal of spare room subsidy or benefit cap"
      }] if not logSubmitted
    }
  } if log[section.id]["spare-room-subsidy"], {
    key: {
      text: "Household homeless immediately before letting"
    },
    value: {
      text: log[section.id]["previous-homelessness"] | textFromInputValue(data.questions["previous-homelessness"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["previous-homelessness"] else "Answer",
        href: sectionPath + "/previous-homelessness",
        visuallyHiddenText: "if household was homeless immediately before letting"
      }] if not logSubmitted
    }
  } if not isRenewal, {
    key: {
      text: "Household given reasonable preference"
    },
    value: {
      text: log[section.id]["given-reasonable-preference"] | textFromInputValue(data.questions["yes-no-unknown"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["given-reasonable-preference"] else "Answer",
        href: sectionPath + "/given-reasonable-preference",
        visuallyHiddenText: "if household was given reasonable preference"
      }] if not logSubmitted
    }
  }, {
    key: {
      text: "Reason for reasonable preference"
    },
    value: {
      text: log[section.id]["reasonable-preference"] | textFromInputValue(data.questions["reasonable-preference"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["reasonable-preference"] else "Answer",
        href: sectionPath + "/reasonable-preference",
        visuallyHiddenText: "reason for reasonable preference"
      }] if not logSubmitted
    }
  } if log[section.id]["reasonable-preference"] == "true", {
    key: {
      text: "Allocation"
    },
    value: {
      text: log[section.id]["allocation"] | textFromInputValue(data.questions["allocation"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["allocation"] else "Answer",
        href: sectionPath + "/allocation",
        visuallyHiddenText: "allocation"
      }] if not logSubmitted
    }
  }, {
    key: {
      text: "Source of referral"
    },
    value: {
      text: log[section.id]["referral"] | textFromInputValue(data.questions["referral"])
    },
    actions: {
      items: [{
        text: "Change" if log[section.id]["referral"] else "Answer",
        href: sectionPath + "/referral",
        visuallyHiddenText: "source of referral"
      }] if not logSubmitted
    }
  } if not isRenewal]
}) }}
