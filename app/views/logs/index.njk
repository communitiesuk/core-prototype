{% extends "layouts/form.njk" %}

{% import "macros.njk" as macro %}
{% from "macros.njk" import adminNavigation with context %}

{% set title = "Logs" %}
{% set caption = thisOrganisation.name %}
{% set isGlobalView = isAdmin and path.startsWith("/logs") %}
{% set typeName = type | capitalize %}

{% block form %}
  {{ govukNotificationBanner({
    text: "Log " + query.logId + " has been submitted",
    type: "success"
  }) if query.success == "submitted" }}

  {% if isGlobalView %}
    {{ macro.heading(title) }}
  {% else %}
    {{ adminNavigation(title) if isAdmin else macro.heading(title, caption) }}
  {% endif %}

  <!--
  {{ appSubNavigation({
      items: [{
      href: "/logs?type=lettings",
      text: "Lettings",
      active: type == "lettings"
    }, {
      href: "/logs?type=sales",
      text: "Sales",
      active: type == "sales"
    }]
  }) }}
  <h2 class="govuk-visually-hidden">{{ typeName }}</h2>
  -->

  <div class="app-filter-layout" data-module="filter-layout">
    <div class="govuk-button-group app-filter-toggle">
      {{ govukButton({
        text: "Create a new " + type + " log",
        name: "type",
        value: type,
        attributes: {
          formaction: "/logs/create"
        }
      }) }}
      <a class="govuk-link govuk-link--no-visited-state" href="#">
        Upload logs
      </a>
    </div>

    <div class="app-filter-layout__filter">
      {% call appFilter({
        title: "Filters"
      }) %}
        {% include "logs/_filters.njk" %}
      {% endcall %}
    </div>

    <div class="app-filter-layout__content">
      {{ appSearch({
        classes: "govuk-!-margin-bottom-4",
        label: {
          classes: "govuk-!-margin-bottom-2",
          text: "Search by log ID, tenant code, property reference or postcode"
        }
      }) }}

      <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--m">

      {% set cardResults %}
        <h2 class="govuk-body">
          {{ macro.tableCaption("logs", pagination.results.count, q) }}
          <a class="govuk-link govuk-link--no-visited-state" href="#" download>Download (CSV)</a>
        </h2>
        {% for log in results | reverse %}
          {{ appLog({
            id: log.id,
            tenantCode: log.setup["tenant-code"],
            propertyReference: log.setup["property-reference"],
            lettingStartDate: log.setup["letting-start-date"] | dateObjectToIso,
            needsType: log.setup["type-of-need"] | textFromInputValue(data.questions["type-of-need"]) if log.setup["type-of-need"],
            owner: data.organisations[log.setup["organisation-owner"]].name if isAdmin,
            manager: data.organisations[log.setup["organisation-manager"]].name if isAdmin,
            status: {
              classes: "govuk-tag--" + data.statuses[log.status].colour,
              text: data.statuses[log.status].text
            } if log.status else {
              classes: "govuk-tag--" + data.statuses.inProgress.colour,
              text: data.statuses.inProgress.text
            },
            updated: log.updated | dateObjectToIso,
            updatedBy: users[log.updatedBy].name
          }) }}
        {% endfor %}
      {% endset %}

      {% set tableResults %}
        {% set captionHtml %}
          {{ macro.tableCaption("logs", pagination.results.count, q) }}
          <a class="govuk-link govuk-link--no-visited-state" href="#" download>Download (CSV)</a>
        {% endset %}

        {%- set logRows = [] -%}
        {% for log in results | reverse %}
          {% set row = logRows.push([{
              html: "<a href=\"/logs/" + log.id + "\">" + log.id + "</a>"
            }, {
              classes: "app-!-font-tabular",
              text: log.setup["tenant-code"] or "—"
            }, {
              classes: "app-!-font-tabular",
              text: log.setup["property-reference"] or "—"
            }, {
              text: log.setup["letting-start-date"] | textFromInputValue | govukDate
            }, {
              html: log.created | govukDate
            }, {
              html: govukTag({
                classes: "govuk-tag--" + data.statuses[log.status].colour,
                text: data.statuses[log.status].text
              }) if log.status else log.progress
            }])
          %}
        {% endfor %}

        {% call appTableGroup({ ariaLabel: "logs" }) %}
          {{ govukTable({
            caption: captionHtml | safe,
            captionClasses: "govuk-table__caption--m govuk-!-font-size-19 govuk-!-font-weight-regular",
            firstCellIsHeader: true,
            head: [{
              text: "Log"
            }, {
              text: "Tenant"
            }, {
              text: "Property"
            }, {
              text: "Tenancy starts"
            }, {
              text: "Log created"
            }, {
              text: "Completed"
            }],
            rows: logRows
          }) }}
        {% endcall %}
      {% endset %}

      {% if results.length %}
        {% if data.features["card-logs"] %}
          {{ cardResults | safe }}
        {% else %}
          {{ tableResults | safe }}
        {% endif %}

        {{ appPagination(pagination) }}
      {% else %}
        <p class="govuk-body"><strong>No {{ type }} logs found</strong></p>
      {% endif %}
    </div>
  </div>
{% endblock %}
