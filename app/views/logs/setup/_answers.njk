{% set isLet = log.type == "lettings" %}
{% set isSupported = log[section.id]["type-of-need"] == "supported" %}
{% set isCompleted = log[section.id]["completed"] == "true" %}

{%- set schemeHtml %}
  {%- if log[section.id].schemeId -%}
    {% set schemedId = log[section.id].schemeId[1] %}
    {{ data.schemes[schemedId].name }}<br>
    <span class="app-!-colour-muted">
    {{ data.schemes[schemedId]["primary-client-group"] | textFromInputValue(data.questions["client-groups"]) }}
    {% if data.schemes[schemedId]["secondary-client-group"] != "false" %}
      <br>{{ data.schemes[schemedId]["secondary-client-group"] | textFromInputValue(data.questions["client-groups"]) }}
    {% endif %}
    </span>
  {% else %}
    <span class="app-!-colour-muted">You didn’t answer this question</span>
  {%- endif -%}
{%- endset %}

{%- set schemeLocationHtml %}
  {%- if log[section.id].schemeLocationId -%}
    {% set schemedId = log[section.id].schemeId[1] %}
    {% set itemId = log[section.id].schemeLocationId %}
    {{ data.schemes[schemedId].locations[itemId].postcode }}<br>
    <span class="app-!-colour-muted">
      {{ data.schemes[schemedId].locations[itemId].name }}
    </span>
  {% else %}
    <span class="app-!-colour-muted">You didn’t answer this question</span>
  {%- endif -%}
{%- endset %}

{{ govukSummaryList({
  rows: [{
    key: {
      text: "Property owner"
    },
    value: {
      text: data.organisations[log[section.id].owner].name | textFromInputValue
    },
    actions: actionLinks({
      href: sectionPath + "/owner",
      visuallyHiddenText: "property owner"
    }) if not logSubmitted
  } if isLet and not isOwningOrg, {
    key: {
      text: "Managing agent"
    },
    value: {
      text: data.organisations[log[section.id].agent].name | textFromInputValue
    },
    actions: actionLinks({
      href: sectionPath + "/agent",
      visuallyHiddenText: "managing agent"
    }) if not logSubmitted
  } if isLet, {
    key: {
      text: "Needs type"
    },
    value: {
      text: log[section.id]["type-of-need"] | textFromInputValue(data.questions["type-of-need"])
    },
    actions: actionLinks({
      href: sectionPath + "/type-of-need",
      visuallyHiddenText: "needs type"
    }) if not logSubmitted
  } if isLet, {
    key: {
      text: "Scheme name"
    },
    value: {
      html: schemeHtml
    },
    actions: actionLinks({
      href: sectionPath + "/scheme",
      visuallyHiddenText: "scheme name"
    }) if not logSubmitted
  } if isSupported, {
    key: {
      text: "Location"
    },
    value: {
      html: schemeLocationHtml
    },
    actions: actionLinks({
      href: sectionPath + "/scheme-location",
      visuallyHiddenText: "supported location"
    }) if not logSubmitted
  } if isSupported, {
    key: {
      text: "Property renewal"
    },
    value: {
      text: log[section.id]["letting-renewal"] | textFromInputValue(data.questions["yes-no"])
    },
    actions: actionLinks({
      href: sectionPath + "/letting-renewal",
      visuallyHiddenText: "if renewal"
    }) if not logSubmitted
  } if isLet, {
    key: {
      text: "Tenacy start date"
    },
    value: {
      text: log[section.id]["letting-start-date"] | textFromInputValue | govukDate
    },
    actions: actionLinks({
      href: sectionPath + "/letting-start-date",
      visuallyHiddenText: "tenacy start date"
    }) if not logSubmitted
  } if isLet, {
    key: {
      text: "Rent type"
    },
    value: {
      text: log[section.id]["type-of-rent"] | textFromInputValue(data.questions["type-of-rent"])
    },
    actions: actionLinks({
      href: sectionPath + "/type-of-rent",
      visuallyHiddenText: "rent type"
    }) if not logSubmitted
  } if isLet, {
    key: {
      text: "Tenant code"
    },
    value: {
      text: log[section.id]["tenant-code"] | textFromInputValue
    },
    actions: actionLinks({
      href: sectionPath + "/tenant-code",
      visuallyHiddenText: "tenant code"
    }) if not logSubmitted
  } if isLet, {
    key: {
      text: "Property reference"
    },
    value: {
      text: log[section.id]["property-reference"] | textFromInputValue
    },
    actions: actionLinks({
      href: sectionPath + "/property-reference",
      visuallyHiddenText: "property reference"
    }) if not logSubmitted
  }]
}) }}
