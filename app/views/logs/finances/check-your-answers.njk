{% extends "layouts/check-answers.njk" %}

{% set period = log[section.id]["income-period"] | replace("ly", "") %}
{% set hasIncomeBenefits =
  (log[section.id]["income-benefits"] !== "none") and
  (log[section.id]["income-benefits"] !== "unknown") and
  (log[section.id]["income-benefits"] !== "prefers-not-to-say")
%}
{% set hasOutgoingsAfterBenefits = log[section.id]["outgoings-after-benefits"] == "true" %}
{% set isSupported = log["about-this-log"]["type-of-need"] == "supported" %}
{% set isRenter = log[section.id]["outgoings-includes-rent"] == "true" | string %}
{% set isCareHome = log[section.id]["outgoings-includes-care-home"] == "true" | string %}

{% block checkAnswers %}
  {{ govukSummaryList({
    rows: [{
      key: {
        text: "Household’s combined income after tax"
      },
      value: {
        text: log[section.id]["income-period"] | textFromInputValue(data.questions["income-period"])
      },
      actions: actionLinks({
        href: sectionPath + "/income-period",
        visuallyHiddenText: "household’s combined income after tax"
      }) if not isCompleted
    }, {
      key: {
        text: "Total household income per " + period
      },
      value: {
        text: log[section.id]["income-value"] | sterling
      },
      actions: actionLinks({
        href: sectionPath + "/income-value",
        visuallyHiddenText: "total household income"
      }) if not isCompleted
    }, {
      key: {
        text: "Housing-related benefits received"
      },
      value: {
        text: log[section.id]["income-benefits"] | textFromInputValue(data.questions["type-of-benefit"])
      },
      actions: actionLinks({
        href: sectionPath + "/income-benefits",
        visuallyHiddenText: "housing-related benefits received"
      }) if not isCompleted
    }, {
      key: {
        text: "Household income from Universal Credit, state pension or benefits"
      },
      value: {
        text: log[section.id]["income-benefits-portion"] | textFromInputValue(data.questions["income-benefits-portion"])
      },
      actions: actionLinks({
        href: sectionPath + "/income-benefits-portion",
        visuallyHiddenText: "household income from Universal Credit, state pension or benefits"
      }) if not isCompleted
    }, {
      key: {
        text: "Does the household pay rent or charges?"
      },
      value: {
        text: log[section.id]["outgoings-includes-rent"] | textFromInputValue(data.questions["yes-no"])
      },
      actions: actionLinks({
        href: sectionPath + "/outgoings-includes-rent",
        visuallyHiddenText: "if the household pay rent or charges"
      }) if not isCompleted
    } if isSupported, {
      key: {
        text: "Frequency of household rent or charges"
      },
      value: {
        text: log[section.id]["outgoings-period"] | textFromInputValue(data.questions["outgoings-period"])
      },
      actions: actionLinks({
        href: sectionPath + "/outgoings-period",
        visuallyHiddenText: "frequency of household rent or charges"
      }) if not isCompleted
    } if isRenter, {
      key: {
        text: "Care home accomodation"
      },
      value: {
        text: log[section.id]["outgoings-value"] | sterling
      },
      actions: actionLinks({
        href: sectionPath + "/outgoings-value",
        visuallyHiddenText: "total household rent or charges"
      }) if not isCompleted
    } if isRenter and not isCareHome, {
      key: {
        text: "Will there be an outstanding amount for basic rent and eligible charges?"
      },
      value: {
        text: log[section.id]["outgoings-after-benefits"] | textFromInputValue(data.questions["yes-no"])
      },
      actions: actionLinks({
        href: sectionPath + "/outgoings-after-benefits",
        visuallyHiddenText: "if there will be an outstanding amount for basic rent and eligible charges"
      }) if not isCompleted
    } if isRenter and hasIncomeBenefits, {
      key: {
        text: "Estimated outstanding amount"
      },
      value: {
        text: log[section.id]["outgoings-outstanding"] | sterling
      },
      actions: actionLinks({
        href: sectionPath + "/outgoings-outstanding",
        visuallyHiddenText: "estimated outstanding amount"
      }) if not isCompleted
    } if isRenter and hasIncomeBenefits and hasOutgoingsAfterBenefits]
  }) }}
{% endblock %}
