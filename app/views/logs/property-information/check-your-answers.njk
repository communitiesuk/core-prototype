{% extends "layouts/check-answers.njk" %}

{% import "macros.njk" as macro %}

{# set variables to test various user selected data #}
{% set hasPostcode = macro.schemeAnswer("postcode-known") == "true" %}
{% set hasLocalAuthority = macro.schemeAnswer("local-authority-known") == "true" %}
{% set isRelet = log[section.id]["is-relet"] == "true" %}
{% set isNewlet = log[section.id]["is-relet"] == "false" %}
{% set isRepaired = log[section.id]["repairs"] == "true" %}
{% set isNewprop = log[section.id]["reason-for-non-relet"] == "newprop" %}
{% set isSupported = log["tailor-log"]["type-of-need"] == "supported" %}
{% set isRenewal = log["tailor-log"]["letting-renewal"] == "true" %}

{# Answer objects #}
{# Hardcode `Arun` as LA for now. Maybe add live postcode lookup later. #}
{% set postcodeRow = {
  key: {
    text: "Postcode"
  },
  value: {
    text: macro.postcodeHtml(macro.schemeAnswer("postcode"), "Arun") if hasPostcode else "Not known"
  },
  actions: actionLinks({
    href: sectionPath + "/postcode",
    visuallyHiddenText: "postcode"
  }) if not isSupported
} %}

{% set localAuthorityRow = {
  key: {
    text: "Local authority"
  },
  value: {
    text: macro.schemeAnswer("local-authorities") | textFromInputValue(data.questions["local-authorities"]) if hasLocalAuthority else "Not known"
  },
  actions: actionLinks({
    href: sectionPath + "/local-authority",
    visuallyHiddenText: "local authority"
  }) if not isSupported
} if not hasPostcode %}

{% set localAuthorityUnknownRow = {
  key: {
    text: "Reason you don’t know the postcode or local authority"
  },
  value: {
    text: macro.schemeAnswer("why-dont-you-know-postcode-or-la")
  },
  actions: actionLinks({
    href: sectionPath + "/why-dont-you-know-postcode-or-la",
    visuallyHiddenText: "the reason you don't know the postcode or local authority"
  }) if not isSupported
} if not hasPostcode and not hasLocalAuthority %}

{% set isReletRow = {
  key: {
    text: "First time being let as social-housing"
  },
  value: {
    text: log[section.id]["is-re-let"] | textFromInputValue(data.questions["re-let"])
  },
  actions: actionLinks({
    href: sectionPath + "/is-re-let",
    visuallyHiddenText: "if this is the first time being let as social-housing"
  })
} %}

{% set typeOfLetRow = {
  key: {
    text: "Most recent let type"
  },
  value: {
    text: log[section.id]["type-of-let"] | textFromInputValue(data.questions["type-of-let"])
  },
  actions: actionLinks({
    href: sectionPath + "/type-of-let",
    visuallyHiddenText: "the recent let type"
  })
} if isRelet %}

{% set reasonForVacancyRow = {
  key: {
    text: "Vacancy reason"
  },
  value: {
    text: log[section.id]["reason-for-vacancy"] | textFromInputValue(data.questions["reason-for-vacancy"][log[section.id]["is-re-let"]])
  },
  actions: actionLinks({
    href: sectionPath + "/reason-for-vacancy",
    visuallyHiddenText: "reason for vacancy"
  })
} %}

{% set typeOfUnitRow = {
  key: {
    text: "Type of unit"
  },
  value: {
    text: macro.schemeAnswer("type-of-unit") | textFromInputValue(data.questions["type-of-unit"])
  },
  actions: actionLinks({
    href: sectionPath + "/type-of-unit",
    visuallyHiddenText: "type of unit"
  }) if not isSupported
} %}

{% set typeOfPropertyRow = {
  key: {
    text: "Type of building"
  },
  value: {
    text: macro.schemeAnswer("type-of-property") | textFromInputValue(data.questions["type-of-property"])
  },
  actions: actionLinks({
    href: sectionPath + "/type-of-property",
    visuallyHiddenText: "type of building"
  }) if not isSupported
} %}

{% set isAdaptedRow = {
  key: {
    text: "Wheelchair adaptation"
  },
  value: {
    text: macro.schemeAnswer("is-adapted") | textFromInputValue(data.questions["yes-no"])
  },
  actions: actionLinks({
    href: sectionPath + "/is-adapted",
    visuallyHiddenText: "if property has been built or adapted to wheelchair-user standards"
  }) if not isSupported
} %}

{% set numberOfBedroomsRow = {
  key: {
    text: "Number of bedrooms"
  },
  value: {
    text: log[section.id]["number-of-bedrooms"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/number-of-bedrooms",
    visuallyHiddenText: "number of bedrooms"
  })
} %}

{% set voidDateRow = {
  key: {
    text: "Build handover date?" if isNewprop else "Void or renewal date"
  },
  value: {
    text: log[section.id]["void-date"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/void-date",
    visuallyHiddenText: "void date"
  })
} %}

{% set repairsRow = {
  key: {
    text: "Major repairs carried out during void period"
  },
  value: {
    text: "Yes – completed on " + log[section.id]["repairs-date"] | textFromInputValue if isRepaired else "No"
  },
  actions: actionLinks({
    href: sectionPath + "/repairs",
    visuallyHiddenText: "status of major repairs"
  })
} if not isNewprop %}

{% set timesOfferedRow = {
  key: {
    text: "Times previously offered since becoming available"
  },
  value: {
    text: log[section.id]["times-previously-offered"] | textFromInputValue
  },
  actions: actionLinks({
    href: sectionPath + "/times-previously-offered",
    visuallyHiddenText: "times previously offered"
  })
} %}

{% block checkAnswers %}
  {% if isSupported and not isRenewal %}
    {{ govukSummaryList({
      rows: [
        isReletRow,
        typeOfLetRow,
        reasonForVacancyRow,
        timesOfferedRow,
        voidDateRow,
        repairsRow
      ]
    }) }}
  {% elif not isSupported and isRenewal %}
    {{ govukSummaryList({
      rows: [
        postcodeRow,
        localAuthorityRow,
        localAuthorityUnknownRow,
        typeOfUnitRow,
        typeOfPropertyRow,
        isAdaptedRow,
        numberOfBedroomsRow
      ]
    }) }}
  {% else %}
    {{ govukSummaryList({
      rows: [
        postcodeRow,
        localAuthorityRow,
        localAuthorityUnknownRow,
        isReletRow,
        typeOfLetRow,
        reasonForVacancyRow,
        timesOfferedRow,
        typeOfUnitRow,
        typeOfPropertyRow,
        isAdaptedRow,
        numberOfBedroomsRow,
        voidDateRow,
        repairsRow
      ]
    }) }}
  {% endif %}
{% endblock %}
